{% extends  "base.html.twig" %}
{% trans_default_domain 'TkuskaDashboardBundle' %}

{% block page_title %}Dashboard{% endblock %}

{% block head_stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.4.0/gridstack.min.css"/>
{% endblock %}

{% block head_javascript %}
    {{ parent() }}
    <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js"></script>
    <script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.4.0/gridstack.min.js'></script>
    <script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.4.0/gridstack.jQueryUI.min.js'></script>
{% endblock %}

{% block main %}
    {{ parent() }}

    <div class="page-header">
        <h2 class="title">Dashboard
            <div class="btn-group pull-right">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                {{ 'available_widgets'|trans }}
                <span class="caret"></span></button>
                <ul class="dropdown-menu">
                {% for type, widget_type in widget_types %}
                    <li>
                        <a href="{{ path('add_widget',{'type': widget_type.type }) }}">
                            {{ widget_type.name }}
                        </a>
                    </li>
                {% endfor %}
                </ul>
            </div>
        </h2>
    </div>

    <div class="grid-stack" data-gs-animate="yes">
        {% for widget in widgets %}
            <div class="grid-stack-item" id="widget_{{ widget.id }}" data-gs-x="{{ widget.x }}" data-gs-y="{{ widget.y }}" data-gs-width="{{ widget.width }}" data-gs-height="{{ widget.height }}" data-widget-type="{{ widget.type }}" data-widget-id="{{ widget.id }}">
                {{ widget.render|raw }}
            </div>
        {% endfor %}
    </div>
{% endblock %}


{% block body_javascript %}

    <script type="text/javascript">
        $(function () {
            $('.grid-stack').gridstack({
                width: 12,
                animate: true,
                alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                resizable: {
                    handles: 'e, se, s, sw, w'
                }
            });
            var grid = $('.grid-stack').data('gridstack');

            // Delete widget button
            $('.close#close').click(function () {
                var widget = $(this).closest('.grid-stack-item');
                var id = widget.data('widget-id');
                $.ajax(Routing.generate('remove_widget', {id: id}));
                grid.removeWidget(widget);
            });

            // Configure widget button
            $('.close#config').click(function () {
                var widget = $(this).closest('.grid-stack-item');
                // flip ici
            });

            // Edit widget custom title
            $('.close#edit').click(function () {
                editTitle($(this).siblings('#widget_title'));
            });
            $('span[data-widget-title-dblclick="true"]').dblclick(function () {
                editTitle($(this));
            })

            function editTitle(title) {

                // SCENE
                var container = title.closest('div');
                var newContainer = container.clone(true);

                // FORM CONTROL
                var input = $('<input></input>')
                    .attr('type', 'text')
                    .attr('value', title.text().trim())
                    .addClass('pull-left form-control')
                    .css('width', '15%')
                    .css('min-width', '150px');
                var form = $('<form></form>').append(input).attr('action', '#');

                var id = $(title).closest('.grid-stack-item').data('widget-id');

                // user presses enter
                form.submit(function () {
                    $(newContainer).find('span#widget_title').text(input.val()).append("&nbsp;");
                    $.ajax(Routing.generate('update_title', {id: id, title: input.val()}));
                    form.replaceWith(newContainer);
                })

                // user focuses out
                input.blur(function () {
                    $(newContainer).find('span#widget_title').text(input.val()).append("&nbsp;");
                    $.ajax(Routing.generate('update_title', {id: id, title: input.val()}));
                    form.replaceWith(newContainer);
                })

                // show input and focus
                container.replaceWith(form);
                input.focus()[0].setSelectionRange(99999, 99999);;
            }

            // When the widget is moved or resized
            $('.grid-stack').on('change', function (e, items) {
                $.each(items, function (index, element) {
                    var id = element.el.data('widget-id');
                    $.ajax(Routing.generate('update_widget', {id: id, x: element.x, y: element.y, width: element.width, height: element.height}));
                })
            });
        });
    </script>
{% endblock %}
