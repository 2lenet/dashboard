{% extends  "base.html.twig" %}

{% block page_title %}Dashboard{% endblock %}

{% block head_stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.4.0/gridstack.min.css"/>
{% endblock %}

{% block head_javascript %}
    {{ parent() }}
    <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js"></script>
    <script src="{{ asset('bundles/tkuskadashboard/lib/hinclude.js') }}" type="text/javascript"></script>
    <script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.4.0/gridstack.min.js'></script>
    <script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.4.0/gridstack.jQueryUI.min.js'></script>

{% endblock %}

{% block main %}
    {{ parent() }}

    <div class="page-header">
        <h2 class="title">{{ 'dashboard'|trans(domain='messages')}}
            <div class="btn-group pull-right">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                {{ 'available_widgets'|trans(domain='TkuskaDashboardBundle') }}
                <span class="caret"></span></button>
                <ul class="dropdown-menu">
                {% for type, widget_type in widget_types %}
                    {% if widget_type.support() %}
                    <li>
                        <a href="#" onclick="addWidget('{{ widget_type.type }}')">
                            {{ widget_type.name|trans }}
                        </a>
                    </li>
                    {%  endif %}
                {% endfor %}
                    <li>
                        <a href="{{ path('delete_my_widgets') }}">
                            {{ 'reset_widgets'|trans(domain='TkuskaDashboardBundle') }}
                        </a>
                    </li>
                </ul>
            </div>

            <div class="pull-right">
                <i id="gs-spin" class="fa fa-pulse"></i>
                &nbsp;
                &nbsp;
                &nbsp;
            </div>
        </h2>
    </div>

    {# MAIN WIDGET GRID #}
    <div id="grid-stack" class="grid-stack" data-gs-animate="yes">
        <script>
            var widgetsRendered = 0;
            var totalWidgets = {{ widgets | length() }};

            function ajaxRenderWidget(widgetId) {
                $.ajax({
                    url: Routing.generate('render_widget', {id: widgetId}),
                    success: function (response) {

                        // Replace the empty widget with response
                        var emptyWidget = $("#widget_" + widgetId);
                        emptyWidget.replaceWith(response);

                        addWidgetListeners(widgetId);
                    },
                    complete: function(response) {
                        // When all widgets are rendered, enable ability for grid to change
                        // do this in 'complete' so if some widgets have an error, still allow grid editing
                        widgetsRendered++;
                        if (widgetsRendered == totalWidgets) {
                            enableGridChanges();
                        }
                    }
                });
            }
        </script>
        {% for widget in widgets if widget.support() %}

            {% if widget.supportsAjax() %}

                {# Put empty widget with loading icon #}
                {{ include('@TkuskaDashboard/widget/empty_widget.html.twig', { widget: widget}) }}

                {# Use ajax request to get widget insides. #}
                <script>
                    $(function() {
                        ajaxRenderWidget({{ widget.id }});
                    });
                </script>

            {% else %}
                {# Directly load the widget. #}
                {{ widget.render | raw() }}
            {% endif %}
            <script>
                // Add the widget to grid
                var grid = $('.grid-stack').data('gridstack');
                var widget = $("#widget_{{ widget.id }}");

                grid.addWidget(widget);
                grid.batchUpdate();
                grid.commit();
            </script>
        {% endfor %}
    </div>

    <script>
            $(function() {
                $('.grid-stack').gridstack({
                    width: 12,
                    animate: true,
                    handleClass: 'panel-heading',
                    alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                    resizable: {
                        // Don't put handles on the sizes so the user can still interact with scroll bars
                        handles: 'se, sw, ne, nw'
                    }
                });
                grid = $('.grid-stack').data('gridstack');
{#                {% for widget in widgets %}#}
{#                    addWidgetListeners({{ widget.id }});#}
{#                {% endfor %}#}
            });


            // Add a widget to the grid.
            function addWidget(type) {
                toggleSpin();
                $.ajax({
                    url: Routing.generate('add_widget', {type: type}),
                    success: function (response) {

                        // Update the grid
                        var grid = $('#grid-stack').data('gridstack');
                        grid.addWidget(response);
                        grid.batchUpdate();
                        grid.commit();

                        addWidgetListeners($(response).data('widget-id'));
                    },
                    complete: function (response) {
                        toggleSpin();
                    }
                });
            }

            // Add the event listeners for the buttons of the widget.
            function addWidgetListeners(id) {
                var grid = $('.grid-stack').data('gridstack');
                // Close widget button
                $('body').on('click', '#close_' + id, function () {
                    var widget = $(this).closest('.grid-stack-item');
                    var id = widget.data('widget-id');
                    $.ajax(Routing.generate('remove_widget', {id: id}));
                    grid.removeWidget(widget[0]);
                });

                // Configure widget button
                $('#config_' + id).click(function () {

                    // toggle visibility
                    toggleConfigPanel($(this), id);
                });

                // Edit widget custom title
                $(' #edit_' + id).click(function () {
                    editTitle($(this).siblings('#widget_title'));
                });
                $('span[data-widget-title-dblclick="true"]').dblclick(function () {
                    editTitle($(this));
                })
            }

            // Edit the title of a widget.
            function editTitle(title) {

                // SCENE
                var container = title.closest('div');
                var newContainer = container.clone(true);

                // FORM CONTROL
                var input = $('<input></input>')
                    .attr('type', 'text')
                    .attr('value', title.text().trim())
                    .addClass('pull-left form-control')
                    .css('width', '15%')
                    .css('min-width', '150px');
                var form = $('<form></form>').append(input).attr('action', '#');

                var id = $(title).closest('.grid-stack-item').data('widget-id');

                // user presses enter
                form.submit(function() {
                    $(newContainer).find('span#widget_title').text(input.val()).append("&nbsp;");
                    $.ajax(Routing.generate('update_title', {id: id, title: input.val()}));
                    form.replaceWith(newContainer);
                })

                // user focuses out
                input.blur(function() {
                    $(newContainer).find('span#widget_title').text(input.val()).append("&nbsp;");
                    $.ajax(Routing.generate('update_title', {id: id, title: input.val()}));
                    form.replaceWith(newContainer);
                })

                // show input and focus
                container.replaceWith(form);
                input.focus()[0].setSelectionRange(99999, 99999);;
            }

            function toggleSpin() {
                $("#gs-spin").toggleClass("fa-spinner");
            }

            function toggleConfigPanel(cogButton, id) {
                cogButton.closest('.grid-stack-item').find(".panel-body:first").toggle();
                $("#form_" + id).toggle();
            }

            function enableGridChanges() {
                // When a widget is moved or resized
                $('.grid-stack').on('change', function (e, items) {
                    $.each(items, function (index, element) {
                        var id = element.el.data('widget-id');
                        $.ajax(Routing.generate('update_widget', {id: id, x: element.x, y: element.y, width: element.width, height: element.height}));
                    })
                });
                grid = $('.grid-stack').data('gridstack');
                grid.enable();
            }
    </script>

    <div style="height: 300px"></div>

{% endblock %}

